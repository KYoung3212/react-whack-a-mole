{"version":3,"sources":["../public/assets/whackattack.png","components/Score.js","components/GameOver.js","components/StartButton.js","components/MoleHole.js","components/App.js","index.js"],"names":["module","exports","Score","className","style","display","this","props","context","score","Component","GameOver","state","gameOver","type","onClick","buttonDisplay","buttonMessage","MoleHole","click","WebkitTransform","holeNumber","App","1","2","3","4","5","6","7","8","9","shake","gameHasStarted","moleHasBeenWhacked","lastMole","titleMargin","cursor","newCursor","addToScore","bind","hit","ready","el","anime","targets","direction","loop","easing","duration","scale","i","l","num","setState","shakeScreen","window","setTimeout","startGame","x","intervalID","setInterval","displayMoles","clearInterval","clearMoles","animate","refs","value","isNaN","activeMole","Math","ceil","random","e","target","parentNode","classList","add","lockOutClick","background","parseInt","remove","posOrNeg","holes","push","key","onMouseDown","onMouseUp","margin","src","WhackAttack","ref","StartButton","timeOut","createMoleHoles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5ebd4d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whackattack.297bf3b1.png\";","import React, { Component } from 'react';\n\nclass Score extends Component {\n\n  render(){\n    return (\n      <div className=\"game__score\" style={{ display: this.props.context.display }}>\n        <h1>SCORE: {this.props.context.score} /15</h1>\n      </div>\n    )\n  };\n}\n\nexport default Score;\n","import React, { Component } from 'react';\n\nclass GameOver extends Component {\n\n  render(){\n    return (\n      <div className=\"game__game-over\" style={{ display: this.props.context.state.gameOver }}>\n        <h1 className=\"game__game-over-header\" >GAME OVER!</h1>\n        <p className=\"game__you-scored\">You scored { this.props.context.state.score }/15</p>\n      </div>\n    )\n  };\n}\n\nexport default GameOver;\n","import React, { Component } from 'react';\n\nclass Score extends Component {\n\n  render(){\n    return (\n      <button className=\"game__start-button\" type=\"button\"\n        onClick={ this.props.onClick } style={{ display: this.props.context.buttonDisplay }}>\n        {this.props.context.buttonMessage}\n      </button>\n    )\n  };\n}\n\nexport default Score;\n","import React, { Component } from 'react';\n\nclass MoleHole extends Component {\n\n  render(){\n    return (\n      <div className=\"game__hole\" style={{ display: this.props.context.display }}>\n        <div className=\"game__whack\">\n          <div className=\"game__mole\" onClick={ this.props.click }\n            style={{WebkitTransform: this.props.context[this.props.holeNumber]}}\n            >\n          </div>\n          <div className=\"game__mound\"></div>\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default MoleHole;\n","import React, { Component } from 'react';\nimport '../App.css';\nimport anime from 'animejs';\nimport Score from './Score.js';\nimport GameOver from './GameOver.js';\nimport StartButton from './StartButton.js';\nimport MoleHole from './MoleHole.js';\nimport WhackAttack from '../../public/assets/whackattack.png'\n\nclass App extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      1:'translate(0, 110%)',\n      2:'translate(0, 110%)',\n      3:'translate(0, 110%)',\n      4:'translate(0, 110%)',\n      5:'translate(0, 110%)',\n      6:'translate(0, 110%)',\n      7:'translate(0, 110%)',\n      8:'translate(0, 110%)',\n      9:'translate(0, 110%)',\n      shake: 'translate(0, 0)',\n      gameHasStarted: false,\n      moleHasBeenWhacked: false,\n      score: 0,\n      lastMole: '',\n      display: 'none',\n      buttonMessage: 'Start Game',\n      gameOver: 'none',\n      buttonDisplay: 'inline-block',\n      titleMargin: '15px',\n      cursor: '../public/assets/hammer.png',\n      newCursor: false\n    };\n    this.addToScore = this.addToScore.bind(this);\n    this.hit = this.hit.bind(this);\n    this.ready = this.ready.bind(this);\n  }\n\n  animate(el){\n    anime({\n      targets: el,\n      direction: 'alternate',\n      loop: true,\n      easing: 'easeInQuad',\n      duration: 1600,\n      scale: function(el, i, l) {\n        return (l - i) + .08;\n      },\n    });\n  }\n\n  timeOut(num){\n    if (this.state.gameHasStarted){return};\n    this.setState({\n      buttonDisplay: 'none',\n      display: 'block',\n      gameOver: 'none',\n      titleMargin: 0\n    });\n    this.shakeScreen();\n    window.setTimeout(() => {\n      this.startGame();\n    }, num);\n  }\n\n  startGame(){\n    if ( this.state.gameHasStarted){ return; }\n\n    this.setState({\n      gameHasStarted: true,\n      score: 0\n    });\n\n    let x = 0;\n    const intervalID = setInterval(() => {\n      this.displayMoles();\n      if (++x === 16) {\n        window.clearInterval(intervalID);\n        this.clearMoles();\n        this.setState({ gameHasStarted: false });\n        window.setTimeout(() => {\n          this.setState({\n            display: 'none',\n            gameOver: 'block',\n            buttonMessage: 'Play again',\n            buttonDisplay: 'inline-block',\n            titleMargin: '15px'\n          });\n          this.animate(this.refs.gameOver);\n        }, 850)\n      }\n    }, 700);\n  }\n\n  clearMoles(){\n    for(let value in this.state){\n      if (!isNaN(value)){\n        this.setState({\n          [value]: 'translate(0, 110%)'\n        });\n      }\n    }\n  }\n\n  displayMoles(){\n    let activeMole = Math.ceil(Math.random() * 9);\n    if (this.state.lastMole[0] === activeMole){\n      this.displayMoles();\n      return;\n    }\n    this.clearMoles();\n    this.setState({\n      [activeMole]: 'translate(0, 5%)',\n      lastMole: [activeMole]\n    });\n  }\n\n  lockOutClick(){\n    window.setTimeout(() => {\n      this.setState({ moleHasBeenWhacked: false })\n    }, 350)\n  }\n\n  addToScore(e){\n    // this.addCursor();\n    if (this.state.moleHasBeenWhacked){ return; }\n    let target = e.target;\n    target.parentNode.classList.add('game__cross');\n    target.classList.add('no-background');\n    this.lockOutClick();\n    this.setState({\n      background: '75px',\n      moleHasBeenWhacked: true,\n      score: [parseInt(this.state.score, 10) + 1]\n    });\n    window.setTimeout(function(){\n      target.parentNode.classList.remove('game__cross');\n      target.classList.remove('no-background');\n    }, 500)\n  }\n\n  shakeScreen(){\n    let posOrNeg = '+';\n    let i = 0;\n    let shake = () => {\n      if (i === 15){\n        this.setState({ shake: 'translate(0, 0)' });\n        return;\n      }\n      window.setTimeout(() => {\n        posOrNeg = posOrNeg === '-' ? '+' : '-';\n        this.setState({ shake: `translate(${posOrNeg}${i}px, 0)` });\n        shake();\n      }, 80);\n      i++\n    };\n    shake();\n  }\n\n  hit(){\n    // console.log(\"clicked\");\n    // document.querySelector('.board').classList.add('newCursor');\n    // document.querySelector('.game__mole').classList.add('newCursor');\n    this.setState({ newCursor: true })\n    }\n\n\n  ready(){\n    // document.querySelector('.board').classList.remove('newCursor');\n    // document.querySelector('.game__mole').classList.remove('newCursor')\n    // debugger;\n    this.setState({ newCursor: false })\n  }\n\n\n  createMoleHoles(){\n    var holes = [];\n    for(let i = 1; i <= 9; i++){\n      holes.push(<MoleHole key={ i } context={ this.state }\n        click={ this.addToScore }  holeNumber={ i }/>);\n    }\n    return (\n      <div onMouseDown={this.hit} onMouseUp={this.ready} className={`board ${this.state.newCursor ? \"hit\" : \"\"}`}>\n        { holes }\n      </div>\n    );\n  }\n\n  render() {\n\n\n    return (\n      <div className=\"main-container\">\n        <div className=\"game\" style={{WebkitTransform: this.state['shake']}}>\n          <h1 className=\"game__title\" style={{ margin: this.state.titleMargin }}><img src={WhackAttack}/></h1>\n          <GameOver context={ this }/>\n          <div ref={ 'gameOver' } className=\"game__button-container\">\n            <StartButton context={ this.state } onClick={ this.timeOut.bind(this) }/>\n          </div>\n          { this.createMoleHoles() }\n          <Score context={ this.state }/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}